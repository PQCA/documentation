{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Select one of the sections using the nav-bar at the top, or top-left.</p> <p>The PQ Code Package project is a new open source project that aims to build high-assurance software implementations of standards-track post-quantum cryptography algorithms. The PQCP is a project within the Linux Foundation as part of the Post-Quantum Cryptography Alliance.</p> <p>Our initial focus in the first phase of the project will be on the Module-Lattice-Based Key Encapsulation Mechanism (ML-KEM) algorithm. As the project grows, we intend to also produce implementations for ML-DSA and SLH-DSA, as well as other standards-track post-quantum algorithms.</p> <p>We aim for implementations produced by the project to have assurances given either as a result of external audits or as a result of formal verification methods (or both).</p>"},{"location":"faqs/","title":"FAQs","text":""},{"location":"faqs/#frequently-asked-questions","title":"Frequently Asked Questions","text":""},{"location":"faqs/#what-is-this-section-of-the-documentation-for","title":"What is this section of the documentation for?","text":"<p>This area will contain common FAQs in future</p>"},{"location":"glossary/","title":"Glossary","text":"glossary <p>A list of definitions of terms used in this documentation.</p>"},{"location":"contributing/asking-a-question/","title":"Getting Help or Chat","text":""},{"location":"contributing/asking-a-question/#asking-a-question","title":"Asking a Question","text":"<p>Tip</p> <ul> <li>check the FAQs to see if your question has already been asked.</li> <li>make sure you provide all relevant details.</li> <li>include information about what you have already tried.</li> <li>review How to Ask Technical Questions to Get Quality Answers prior to asking your question.</li> </ul>"},{"location":"contributing/asking-a-question/#chat","title":"Chat","text":"<p>PQCA's Discord server is the place to go for real-time chat about everything from quick help to involved discussions.</p> <p>For general pq-code-package discussions, join the Discord server and visit the channels in the PQ Code Package section, for example:</p> <ul> <li>pqcp-general : general discussions</li> <li>pqcp-tsc : Technical steering committee</li> </ul> <p>Other channels will be added as individual projects opt to use discord to continue async discussions.</p>"},{"location":"contributing/asking-a-question/#github-discussions","title":"Github discussions","text":"<p>Discussions on pq-code-package can also be used for discussions that aren't appropriate to track in issues</p>"},{"location":"contributing/asking-a-question/#mailing-lists","title":"Mailing Lists","text":"<p>The pq-code-package mailing lists are hosted by the pqca Foundation: https://pqca.org . </p> <p>Currently there is one specific mailing list pq-code-package-tsc .</p> <p>If the lists are used extensively, additional lists can be added,</p>"},{"location":"contributing/how-to-contribute/","title":"How to Contribute","text":""},{"location":"contributing/how-to-contribute/#how-to-contribute","title":"How to Contribute","text":""},{"location":"contributing/how-to-contribute/#ways-to-contribute","title":"Ways to Contribute","text":"<p>Contributions from the development community help improve the capabilities of Pq-code-package. These contributions are the most effective way to make a positive impact on the project.</p> <p>Ways you can contribute:</p> <ul> <li>Bugs or issues: Report problems or defects found when working with the project (see Reporting a Bug)</li> <li>Core features and enhancements: Provide expanded capabilities or optimizations</li> <li>Documentation: Improve existing documentation or create new information</li> <li>Tests: Add functional, performance, or scalability tests</li> </ul> <p>Issues can be found in GitHub. Any unassigned items are probably still open. When in doubt, ask on Discord about a specific issue (see Asking a Question). We also use the #good-first-issue tag to represent issues that might be good for first timers.</p>"},{"location":"contributing/how-to-contribute/#the-commit-process","title":"The Commit Process","text":"<p>Pq-code-package is Apache 2.0 licensed and accepts contributions via GitHub pull requests. When contributing code, please follow these guidelines:</p> <ul> <li>Fork the repository and make your changes in a feature branch</li> <li>Include unit and integration tests for any new features and updates to existing tests</li> <li>Ensure that the unit and integration tests run successfully prior to submitting the pull request.</li> </ul>"},{"location":"contributing/how-to-contribute/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>A pull request can contain a single commit or multiple commits. The most important guideline is that a single commit should map to a single fix or enhancement. Here are some example scenarios:</p> <ul> <li>If a pull request adds a feature but also fixes two bugs, the pull request should have three commits: one commit for the feature change and two commits for the bug fixes.</li> <li>If a PR is opened with five commits that contain changes to fix a single issue, the PR should be rebased to a single commit.</li> <li>If a PR is opened with several commits, where the first commit fixes one issue and the rest fix a separate issue, the PR should be rebased to two commits (one for each issue).</li> <li>Do not squash your commits until the final stage of review. This helps reviewers and approvers understand what has changed between cycles.</li> </ul> <p>Important</p> <p>Your pull request should be rebased against the current master branch. Do not merge the current master branch in with your topic branch. Do not use the Update Branch button provided by GitHub on the pull request page.</p>"},{"location":"contributing/how-to-contribute/#commit-messages","title":"Commit Messages","text":"<p>Commit messages should follow common Git conventions, such as using the imperative mood, separate subject lines, and a line length of 72 characters.  These rules are well documented in Chris Beam's blog post.</p>"},{"location":"contributing/how-to-contribute/#signed-off-by","title":"Signed-off-by","text":"<p>Each commit must include a \"Signed-off-by\" line in the commit message (<code>git commit -s</code>). This sign-off indicates that you agree the commit satisfies the Developer Certificate of Origin (DCO).</p>"},{"location":"contributing/how-to-contribute/#commit-email-address","title":"Commit Email Address","text":"<p>Your commit email address must match your GitHub email address. For more information, see https://help.github.com/articles/setting-your-commit-email-address-in-git/</p>"},{"location":"contributing/how-to-contribute/#important-github-requirements","title":"Important GitHub Requirements","text":"<p>A pull request cannot merged until it has passed these status checks:</p> <ul> <li>The build must pass all checks</li> <li>The PR must be approved by at least one reviewer without any   outstanding requests for changes</li> </ul>"},{"location":"contributing/how-to-contribute/#inclusive-language","title":"Inclusive Language","text":"<ul> <li>Consider that users who will read the source code and documentation are from different background and cultures and that they have different preferences.</li> <li>Avoid potential offensive terms and, for instance, prefer \"allow list and deny list\" to \"white list and black list\".</li> <li>We believe that we all have a role to play to improve our world, and even if writing inclusive code and documentation might not look like a huge improvement, it's a first step in the right direction.</li> <li>We suggest to refer to Microsoft bias free writing guidelines and Google inclusive doc writing guide as starting points.</li> </ul>"},{"location":"contributing/how-to-contribute/#credits","title":"Credits","text":"<p>This document has been adapted for pq-code-package based on based on Hyperledger Sawtooth's Contributing documentation.</p>"},{"location":"contributing/reporting-a-bug/","title":"Reporting a Bug","text":""},{"location":"contributing/reporting-a-bug/#reporting-a-bug","title":"Reporting a Bug","text":"<p>To report a bug, submit an issue via github, directly against the appropriate [repository](repositories.md</p> <p>If the issue is security related, please follow the steps in reporting a security issue instead.</p> <p>When reporting an issue, please provide as much detail as possible about how to reproduce it. If possible, explain how to reproduce the issue. Details are very helpful. Please include the following information:</p> <ul> <li>Operating system and version</li> <li>Architecture (ie amd64, arm64 etc)</li> <li>Code version</li> <li>Environment details (virtual, physical, etc.)</li> <li>Steps to reproduce the issue</li> <li>Actual results</li> <li>Expected results</li> </ul>"},{"location":"contributing/repositories/","title":"Repositories","text":"Repository tags Purpose <code>.github</code> None PQCP GitHub organization profile <code>documentation</code> [OrderedDict({'name': 'documentation'}), OrderedDict({'name': 'website'})] Project documentation built using mkdocs <code>mlkem-c-aarch64</code> None ML-KEM implementation optimized for aarch64 <code>mlkem-c-embedded</code> None MLKEM implementation optimized for embedded microcontrollers <code>mlkem-c-generic</code> None ML-KEM generic implementation in C from PQclean <code>mlkem-libjade</code> None ML-KEM implementation in libjade with high assurance <code>mlkem-rust-libcrux</code> None portable ML-KEM implementation with some optimizations for AVX2. Full AVX2 support will be added over the coming months. The code is formally verified for panic freedom, correctness, and secret independence in F* using the hax toolchain. <code>pq-code-package-hackathon</code> [OrderedDict({'name': 'documentation'}), OrderedDict({'name': 'hackathon'}), OrderedDict({'name': 'website'})] Hackathon planning and documentation <code>template-code</code> None Template for creating code repositories, with basic file setup included <code>tsc</code> None PQ Code Project Technical Steering Committee resources <p>NOTE: The above segment is created by the <code>scripts/catalog_repo.pl</code> script. </p>"},{"location":"contributing/requesting-a-change/","title":"Requesting a Change","text":""},{"location":"contributing/requesting-a-change/#requesting-a-change","title":"Requesting a Change","text":"<p>Pq-code-package highly values every idea or contribution from our community, and we kindly ask you to take the time to read the following guidelines before  submitting your change request in our public issue trackers. This will help us  better understand the proposed change, and how it will benefit the community.</p> <p>This guide is our best effort to explain the criteria and reasoning behind our decisions when evaluating change requests and considering them for implementation. </p>"},{"location":"contributing/requesting-a-change/#before-creating-an-issue","title":"Before creating an issue","text":"<p>Before you invest your time to fill out and submit a change request, we kindly ask you to do some preliminary work by answering some questions to determine if your idea is a good fit and matches the project's philosophy and tone.</p> <p>Please find answers to the following questions before creating an issue.</p>"},{"location":"contributing/requesting-a-change/#its-not-a-bug-its-a-feature","title":"It's not a bug, it's a feature","text":"<p>Change requests are intended for suggesting minor adjustments, ideas for new features, or to influence the project's direction and vision. It is important to note that change requests are not intended for reporting bugs, as they're missing essential information for debugging.</p> <p>If you want to report a bug, please refer to our bug reporting guide instead.</p>"},{"location":"contributing/requesting-a-change/#source-of-inspiration","title":"Source of inspiration","text":"<p>If you have seen your idea implemented in similar project, make sure to collect enough information on its implementation before submitting, as this allows us to evaluate potential fit more quickly. Explain what you like and dislike about the implementation.</p>"},{"location":"contributing/requesting-a-change/#benefit-for-the-community","title":"Benefit for the community","text":"<p>Our Discord server is the best place to connect with our community. When  evaluating new ideas, it's essential to seek input from other users and consider  alternative viewpoints. This approach helps to implement new features in a way that benefits a large number of users.</p>"},{"location":"contributing/requesting-a-change/#issue-template","title":"Issue template","text":"<p>Now that you have taken the time to do the necessary preliminary work and ensure  that your idea meets our requirements, you are invited to create a change request. The following guide will walk you through all necessary steps to help you submit a comprehensive and useful issue:</p> <ul> <li>Title</li> <li>Context optional</li> <li>Description</li> <li>Related links</li> <li>Use cases</li> <li>Visuals optional</li> <li>Checklist</li> </ul>"},{"location":"contributing/requesting-a-change/#title","title":"Title","text":"<p>A good title is short and descriptive. It should be a one-sentence executive summary of the idea, so the potential impact and benefit for the community can  be inferred from the title.</p>"},{"location":"contributing/requesting-a-change/#context","title":"Context optional","text":"<p>Before describing your idea, you can provide additional context for us to understand what you are trying to achieve. Explain the circumstances in which you're using pq-code-package, and what you think might be relevant. Don't write about the change request here.</p> <p>Why we need this</p> <p>Some ideas might only benefit specific settings, environments or edge cases. With a little context, change requests can be prioritized more accurately.</p>"},{"location":"contributing/requesting-a-change/#description","title":"Description","text":"<p>Next, provide a detailed and clear description of your idea. Explain why your  idea is relevant to pq-code-package and must be implemented here, and not in one of its dependencies.</p> <ul> <li> <p>Explain the what, not the why \u2013 don't explain     the benefits of your idea here, we're getting there.     Focus on describing the proposed change request as precisely as possible.</p> </li> <li> <p>Keep it short and concise \u2013 be brief and to the point when describing      your idea, there is no need to over-describe it. Maintainers and future     users will be grateful for having to read less.</p> </li> <li> <p>One idea at a time \u2013 if you have multiple ideas that don't belong  together, please open separate change requests for each of those ideas.</p> </li> <li> <p> Stretch goal \u2013 if you have a customization or another way to add the proposed change, you can help other users by sharing it here before we maintainers can add it to our code base.</p> </li> </ul> <p>Why we need this</p> <p>To understand and evaluate your proposed change, we need to have a clear understanding of your idea. By providing a detailed and precise description, you can help save you and us time spent discussing further clarification of your idea in the comments.</p>"},{"location":"contributing/requesting-a-change/#related-links","title":"Related links","text":"<p>Please provide any relevant links to issues, discussions, or documentation  sections related to your change request. If you (or someone else) already discussed this idea with the community on our discussion board, please include  the link to the discussion as well.</p> <p>Why we need this</p> <p>Related links help us gain a comprehensive understanding of your change request by providing additional context. Additionally, linking to previous issues and discussions allows us to quickly evaluate the feedback and input already provided by the community.</p>"},{"location":"contributing/requesting-a-change/#use-cases","title":"Use cases","text":"<p>Explain how your change request would work from a user's perspective \u2013 what's the expected impact and why does it not only benefit you, but other users? How many of them? Furthermore, would it potentially break existing functionality?</p> <p>Why we need this</p> <p>Understanding the use cases and benefits of an idea is crucial in evaluating its potential impact and usefulness for the project and its users. This information helps us to understand the expected value of the idea and how it aligns with the goals of the project.</p>"},{"location":"contributing/requesting-a-change/#visuals","title":"Visuals optional","text":"<p>We now have a clear and detailed description of your idea, including information  on its potential use cases and relevant links for context. If you have any  visuals, such as sketches, screenshots, mockups, or external assets, you may  present them in this section.</p> <p>Tip</p> <p>You can drag and drop the files here or include links to external assets.</p> <p>Additionally, if you have seen this change, feature, or improvement used  elsewhere, please provide an example by showcasing  it and describing how it was implemented and incorporated.</p> <p>Why we need this</p> <p>Illustrations and visuals can help us maintainers better understand and envision your idea. Screenshots, sketches, or mockups can create an additional level of detail and clarity that text alone may not be able to convey. Also, seeing how your idea has been implemented in other projects can help us understand its potential impact and feasibility in pq-code-package, which helps us maintainers evaluate and triage change requests.</p>"},{"location":"contributing/requesting-a-change/#checklist","title":"Checklist","text":"<p>Thanks for following the change request guide and creating a high-quality  change request. This section ensures that you have read this guide and have worked to your best knowledge to provide us with every piece of information to  review your idea for pq-code-package.</p> <p>We'll take it from here.</p>"},{"location":"contributing/requesting-a-change/#credits","title":"Credits","text":"<p>This document is based on Material for MkDocs Requesting a Change.</p>"},{"location":"governance/charter/","title":"Charter","text":"<p>The charter under which pq-code-package is managed can be found in the TSC repository </p> <ul> <li>Read pq-code-package charter</li> </ul>"},{"location":"governance/code-of-conduct/","title":"Code of Conduct","text":"<p>Whilst the community is organizing, we haven't yet formally adopted a specific code of conduct.</p> <p>The working assumption is that we follow the standard Linux Foundation code of conduct</p> <ul> <li>Linux Foundation COC</li> </ul>"},{"location":"governance/dco/","title":"Developer Certificate of Orgin (DCO)","text":"<p>The DCO is a per-commit sign-off made by a contributor stating that they agree to the terms published at https://developercertificate.org/ for that particular contribution.</p> <ul> <li>Read more</li> </ul>"},{"location":"governance/tsc/","title":"Technical Steering Committee","text":""},{"location":"governance/tsc/#technical-steering-committee","title":"Technical Steering Committee","text":"<p>The Technical Steering Committee (TSC) is the leadership of the pq-code-package project. It's role is to:</p> <ul> <li>Set the overall strategy of the project ie across all our algorithm implementations &amp; supporting subprojects</li> <li>Liase with the PQCA TAC providing feedback and raising issues and concerns</li> <li>resolve any issues within the project community</li> </ul>"},{"location":"governance/tsc/#members","title":"Members","text":"<p>The TSC is open to everyone to contribute.</p>"},{"location":"governance/tsc/#voting-members","title":"Voting members","text":"<p>There are specific voting members as agreed at the initial TSC. These are:</p> <ul> <li>Manuel Barbosa</li> <li>Hanno Becker</li> <li>Nigel Jones</li> <li>Matthias J. Kannwischer</li> <li>Franziskus Kiefer</li> <li>Tiago Oliveira</li> <li>John Schanck</li> <li>Douglas Stebila</li> </ul>"},{"location":"governance/tsc/#tsc-lead","title":"TSC Lead","text":"<p>The TSC lead is Nigel Jones</p>"},{"location":"governance/tsc/#meetings","title":"Meetings","text":"<p>Meetings are open to everyone, but only TSC members may vote.</p> <p>Minutes and recordings will generally be made available. If you are concerned about recording or minutes this may be noted, and recording/minuting then suspended for the appropriate discussion.</p> <ul> <li> <p>Link to agenda and minutes</p> </li> <li> <p>PQCA calendar incorporates all scheduled TSC meetings</p> </li> </ul>"},{"location":"governance/tsc/#issue-tracking","title":"Issue Tracking","text":"<p>The tsc repo is used to track discussions and actions at the TSC.</p>"},{"location":"implementations/","title":"Implementations and characteristics","text":""},{"location":"implementations/#implementations","title":"Implementations","text":"<p>The PQ Code Package offers a variety of different implementations of ML-KEM.</p> <p>These vary in certain characteristics in terms of:</p> <ul> <li>Code Audits</li> <li>Formal verification</li> <li>Platform specific optimizations (memory, cpu, ...)</li> <li>Implementation Language</li> </ul> <p>Additionally as sub-projects onboard to pq-code-package they will go through a variety of stages before being ready to use </p> <p>More guidance about how to choose an implementation will be added in future. </p> <p>For now go to the list of repositories &amp; view the other pages in this section</p>"},{"location":"implementations/mlkem-c-aarch64/","title":"ML-KEM optimized C (aarch64)","text":"<p>ML-KEM implementation optimized for aarch64</p> NO implementation code as of 2024-05-09"},{"location":"implementations/mlkem-c-embedded/","title":"ML-KEM optimized C (embedded)","text":"<p>MLKEM-C-EMBEDDED is a collection of MLKEM implementations optimized for embedded microcontrollers.</p> <ul> <li>Detailed information</li> </ul>"},{"location":"implementations/mlkem-c-generic/","title":"ML-KEM generic C implementation","text":"<p>ML-KEM generic implementation in C from PQclean</p> NO implementation code as of 2024-05-09"},{"location":"implementations/mlkem-libjade/","title":"ML-KEM libjade (jasmin)","text":"<p>The code provided in this repository comes from the libjade cryptographic library. See https://formosa-crypto.org for more information.</p> NO implementation code as of 2024-05-09"},{"location":"implementations/mlkem-rust-libcrux/","title":"ML-KEM libcrux (rust)","text":"<p>portable ML-KEM implementation with some optimizations for AVX2. Full AVX2 support will be added over the coming months. The code is formally verified for panic freedom, correctness, and secret independence in F* using the hax toolchain.</p> NO implementation code as of 2024-05-09"},{"location":"overview/choosing-implementation/","title":"Choosing an implementation","text":""},{"location":"overview/choosing-implementation/#choosing-an-ml-kem-implementation","title":"Choosing an ML-KEM implementation","text":"<p>The PQ Code Package offers a variety of different implementations of ML-KEM.</p> <p>These vary in certain characteristics in terms of:</p> <ul> <li>Code Audits</li> <li>Formal verification</li> <li>Platform specific optimizations (memory, cpu, ...)</li> <li>Implementation Language</li> </ul> <p>Additionally as sub-projects onboard to pq-code-package they will go through a variety of stages before being ready to use </p> <p>More guidance about how to choose an implementation will be added in future. </p> <p>For now go to the list of repositories &amp; view the other pages in this section</p>"},{"location":"overview/mlkem/","title":"Background to ML-KEM","text":"<p>ML-KEM is an M odule L attice implementation of a K ey E xchange M echanism as specified in FIPS 203 (draft). </p> <p>This standard also specifies three parameter sets:</p> <ul> <li>ML-KEM-512</li> <li>ML-KEM-768</li> <li>ML-KEM-1024</li> </ul> <p>ML-KEM is based on the original CRYSTALS-Kyber KEM and is IND-CCA2 secure. </p>"},{"location":"overview/pqca/","title":"About the PQCA","text":""},{"location":"overview/pqca/#post-quantum-cryptography-alliance-pqca","title":"Post Quantum Cryptography Alliance (PQCA)","text":"<p>The alliance seeks to address cryptographic security challenges posed by quantum computing by producing high-assurance software implementations of standardized algorithms and supporting the continued development and standardization of new post-quantum algorithms with software for evaluation and prototyping.</p> <ul> <li>https://pqca.org/</li> </ul> <p>The pq-code-package is a project under the PQCA.</p> <p>PQCA is a Linux Foundation project.</p>"},{"location":"overview/pqca/#other-pqca-subprojects","title":"Other PQCA subprojects","text":"<ul> <li>Open Quantum Safe</li> </ul>"},{"location":"overview/purpose/","title":"Purpose","text":"<p>The PQ Code Package project is a new open source project that aims to build high-assurance software implementations of standards-track post-quantum cryptography algorithms.  The PQCP is a project within the Linux Foundation as part of the Post-Quantum Cryptography Alliance.</p> <p>Our initial focus in the first phase of the project will be on the Module-Lattice-Based Key Encapsulation Mechanism (ML-KEM) algorithm.  As the project grows, we intend to also produce implementations for ML-DSA and SLH-DSA, as well as other standards-track post-quantum algorithms.</p> <p>We aim for implementations produced by the project to have assurances given either as a result of external audits or as a result of formal verification methods (or both).</p> <p>We have interest from early participants to create or build on existing implementations for the following algorithms and platforms, and hope to expand this list as the project progresses:</p> <ul> <li>a platform-independent implementation of ML-KEM in C</li> <li>an AVX2-optimized assembly implementation of ML-KEM</li> <li>a Rust implementation of ML-KEM</li> <li>an aarch64-optimized implementation of ML-KEM</li> </ul>"},{"location":"security/reporting-a-security-issue/","title":"Reporting a Security Issue","text":"<p>Guidance on reporting security concerns will be added soon.</p> <p>For now, please contact one of the project maintainers directly if it's a security concern that's not yet appropriate to make public.</p>"}]}